package  com.preprocessor;

import com.tutor.parser.model.graphicalSVGObject.SVGComponent;
import com.tutor.parser.model.graphicalSVGObject.SVGLine;
import com.tutor.parser.model.graphicalSVGObject.SVGCircle;
import com.tutor.parser.model.graphicalSVGObject.SVGRectangle;
import com.tutor.parser.model.graphicalSVGObject.SVGText;
import com.tutor.parser.model.graphicalSVGObject.SVGImage;
import com.tutor.parser.model.preProcessor.SVGtoPOJOMapper;
import java.util.ArrayList;
import com.tutor.parser.model.graphicalPOJOObject.line.VerticalLine;
import com.tutor.parser.model.graphicalPOJOObject.line.HorizontalLine;
import com.tutor.parser.model.graphicalPOJOObject.line.AngleLine;
import com.tutor.parser.model.graphicalPOJOObject.Circle.Circle;
import com.tutor.parser.model.graphicalPOJOObject.Text.Text;
import com.tutor.parser.model.graphicalPOJOObject.Rectangle.Rectangle;

dialect "mvel";
dialect "java";

rule "Horizontal line identifier"
  when
    svgpojomapper : SVGtoPOJOMapper($listOfComponent : svgImage.getLines(),
                    $graphicalComponent : graphicalImageComponents);
    $component : SVGLine(x1==x2) from $listOfComponent;
  then
    $graphicalComponent.add(new VerticalLine($component.getX1(),$component.getY1(),$component.getX2(),$component.getY2(),$component.getStroke_width()));
  //  System.out.println("got a Vertical Line");
end

rule "Vertical line identifier"
  when
    svgpojomapper : SVGtoPOJOMapper($listOfComponent : svgImage.getLines(), $graphicalComponent: graphicalImageComponents );
    $component : SVGLine(y1==y2) from $listOfComponent;
  then
    $graphicalComponent.add(new HorizontalLine($component.getX1(),$component.getY1(),$component.getX2(),$component.getY2(),$component.getStroke_width()));
  //  System.out.println("got a Horizontal Line");
end

rule "Angle line identifier"
  when
    svgpojomapper : SVGtoPOJOMapper($listOfComponent : svgImage.getLines(),$graphicalComponent : graphicalImageComponents);
    $component : SVGLine(y1!=y2 && x1!=x2) from $listOfComponent;
  then
    $graphicalComponent.add(new AngleLine($component.getX1(),$component.getY1(),$component.getX2(),$component.getY2(),$component.getStroke_width()));
  //  System.out.println("got a angled Line");
end

rule "Circle identifier"
  when
     svgpojomapper : SVGtoPOJOMapper($listOfComponent : svgImage.getCircles(),$graphicalComponent : graphicalImageComponents);
     $component : SVGCircle() from $listOfComponent;
  then
     $graphicalComponent.add(new Circle($component.getCx(),$component.getCy(),$component.getFill()));
   //  System.out.println("got a circle");
end
rule "Rectangle identifier"
  when
     svgpojomapper : SVGtoPOJOMapper($listOfComponent : svgImage.getRectangles(),$graphicalComponent : graphicalImageComponents);
     $component : SVGRectangle() from $listOfComponent;
  then
     $graphicalComponent.add(new Rectangle($component.getX(),$component.getY(),$component.getHeight(),$component.getWidth()));
end


rule "Text identifier"
  when
    svgpojomapper : SVGtoPOJOMapper($listOfComponent : svgImage.getTexts(),$texts : texts);
    $component : SVGText() from $listOfComponent;
  then
    $texts.add(new Text($component.getX(),$component.getY(),$component.getText()));
   // System.out.println("got a text.svg");
end
